[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Intro",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "Intro",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "Intro",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "common.models",
        "description": "common.models",
        "isExtraImport": true,
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "common",
        "description": "common",
        "isExtraImport": true,
        "detail": "common",
        "documentation": {}
    },
    {
        "label": "IntroSerializer",
        "importPath": "common.serializers",
        "description": "common.serializers",
        "isExtraImport": true,
        "detail": "common.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "importPath": "common.serializers",
        "description": "common.serializers",
        "isExtraImport": true,
        "detail": "common.serializers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "environ",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "environ",
        "description": "environ",
        "detail": "environ",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "config.jazzmin_conf",
        "description": "config.jazzmin_conf",
        "isExtraImport": true,
        "detail": "config.jazzmin_conf",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "OpenAPISchemaGenerator",
        "importPath": "drf_yasg.generators",
        "description": "drf_yasg.generators",
        "isExtraImport": true,
        "detail": "drf_yasg.generators",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "swagger_urlpatterns",
        "importPath": "config.schema",
        "description": "config.schema",
        "isExtraImport": true,
        "detail": "config.schema",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Booking",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Syptoms",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Booking",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Booking",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "doctor",
        "description": "doctor",
        "isExtraImport": true,
        "detail": "doctor",
        "documentation": {}
    },
    {
        "label": "BookingSerializer",
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "isExtraImport": true,
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "DoctorSerializer",
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "isExtraImport": true,
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "order",
        "description": "order",
        "isExtraImport": true,
        "detail": "order",
        "documentation": {}
    },
    {
        "label": "IsOwnerOrReadOnly",
        "importPath": "order.permissions",
        "description": "order.permissions",
        "isExtraImport": true,
        "detail": "order.permissions",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "importPath": "order.serializers",
        "description": "order.serializers",
        "isExtraImport": true,
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "ShippingAddressSerializer",
        "importPath": "order.serializers",
        "description": "order.serializers",
        "isExtraImport": true,
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "shop",
        "description": "shop",
        "isExtraImport": true,
        "detail": "shop",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "ProductDetailSerializer",
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "isExtraImport": true,
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "ProductListSerializer",
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "isExtraImport": true,
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "users",
        "description": "users",
        "isExtraImport": true,
        "detail": "users",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "users.serializers",
        "description": "users.serializers",
        "isExtraImport": true,
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "common.migrations.0001_initial",
        "description": "common.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Intro',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "common.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "common.migrations.0002_alter_intro_title_notification",
        "description": "common.migrations.0002_alter_intro_title_notification",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('common', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='intro',\n            name='title',\n            field=models.CharField(max_length=256),",
        "detail": "common.migrations.0002_alter_intro_title_notification",
        "documentation": {}
    },
    {
        "label": "CommonConfig",
        "kind": 6,
        "importPath": "common.apps",
        "description": "common.apps",
        "peekOfCode": "class CommonConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"common\"",
        "detail": "common.apps",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "kind": 6,
        "importPath": "common.models",
        "description": "common.models",
        "peekOfCode": "class BaseModel(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    class Meta:\n        abstract = True\nclass Intro(BaseModel):\n    title = models.CharField(max_length=256)\n    image = models.ImageField(upload_to=\"intro/\")\nclass Notification(BaseModel):\n    user = models.ForeignKey(",
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "Intro",
        "kind": 6,
        "importPath": "common.models",
        "description": "common.models",
        "peekOfCode": "class Intro(BaseModel):\n    title = models.CharField(max_length=256)\n    image = models.ImageField(upload_to=\"intro/\")\nclass Notification(BaseModel):\n    user = models.ForeignKey(\n        User, on_delete=models.CASCADE, related_name=\"notifications\"\n    )\n    title = models.CharField(max_length=256)\n    content = models.TextField()\n    is_read = models.BooleanField(default=False)",
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "kind": 6,
        "importPath": "common.models",
        "description": "common.models",
        "peekOfCode": "class Notification(BaseModel):\n    user = models.ForeignKey(\n        User, on_delete=models.CASCADE, related_name=\"notifications\"\n    )\n    title = models.CharField(max_length=256)\n    content = models.TextField()\n    is_read = models.BooleanField(default=False)",
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "common.models",
        "description": "common.models",
        "peekOfCode": "User = get_user_model()\nclass BaseModel(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    class Meta:\n        abstract = True\nclass Intro(BaseModel):\n    title = models.CharField(max_length=256)\n    image = models.ImageField(upload_to=\"intro/\")\nclass Notification(BaseModel):",
        "detail": "common.models",
        "documentation": {}
    },
    {
        "label": "IntroSerializer",
        "kind": 6,
        "importPath": "common.serializers",
        "description": "common.serializers",
        "peekOfCode": "class IntroSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Intro\n        fields = \"__all__\"\nclass NotificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Notification\n        fields = \"__all__\"",
        "detail": "common.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "kind": 6,
        "importPath": "common.serializers",
        "description": "common.serializers",
        "peekOfCode": "class NotificationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Notification\n        fields = \"__all__\"",
        "detail": "common.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "common.urls",
        "description": "common.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.IntroListAPIView.as_view()),\n    path('notification/', views.NotificationListAPIView.as_view()),\n]",
        "detail": "common.urls",
        "documentation": {}
    },
    {
        "label": "IntroListAPIView",
        "kind": 6,
        "importPath": "common.views",
        "description": "common.views",
        "peekOfCode": "class IntroListAPIView(generics.ListAPIView):\n    queryset = Intro.objects.all()\n    serializer_class = IntroSerializer\n    pagination_class = None\nclass NotificationListAPIView(generics.ListAPIView):\n    queryset = Notification.objects.all()\n    serializer_class = NotificationSerializer\n    pagination_class = None",
        "detail": "common.views",
        "documentation": {}
    },
    {
        "label": "NotificationListAPIView",
        "kind": 6,
        "importPath": "common.views",
        "description": "common.views",
        "peekOfCode": "class NotificationListAPIView(generics.ListAPIView):\n    queryset = Notification.objects.all()\n    serializer_class = NotificationSerializer\n    pagination_class = None",
        "detail": "common.views",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\n# READING ENV\nenv = environ.Env()\nenv.read_env(os.path.join(BASE_DIR, \".env\"))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"1\"\n# SECRET_KEY = env.str(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "env = environ.Env()\nenv.read_env(os.path.join(BASE_DIR, \".env\"))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"1\"\n# SECRET_KEY = env.str(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n# DEBUG = env.bool(\"DEBUG\")",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "SECRET_KEY = \"1\"\n# SECRET_KEY = env.str(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n# DEBUG = env.bool(\"DEBUG\")\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nDJANGO_APPS = [\n    # \"jazzmin\",\n    \"django.contrib.admin\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "DEBUG = True\n# DEBUG = env.bool(\"DEBUG\")\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nDJANGO_APPS = [\n    # \"jazzmin\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\n# Application definition\nDJANGO_APPS = [\n    # \"jazzmin\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "DJANGO_APPS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "DJANGO_APPS = [\n    # \"jazzmin\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n]\nCUSTOM_APPS = [",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "CUSTOM_APPS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "CUSTOM_APPS = [\n    \"common\",\n    \"shop\",\n    \"doctor\",\n    \"users\",\n    \"order\",\n]\nTHIRD_PARTY_APPS = [\n    \"rest_framework\",\n    \"drf_yasg\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "THIRD_PARTY_APPS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "THIRD_PARTY_APPS = [\n    \"rest_framework\",\n    \"drf_yasg\",\n    \"corsheaders\",\n    \"axes\",\n    \"django_filters\",\n]\nAUTHENTICATION_BACKENDS = [\n    # AxesStandaloneBackend should be the first backend in the AUTHENTICATION_BACKENDS list.\n    \"axes.backends.AxesStandaloneBackend\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    # AxesStandaloneBackend should be the first backend in the AUTHENTICATION_BACKENDS list.\n    \"axes.backends.AxesStandaloneBackend\",\n    # Django ModelBackend is the default authentication backend.\n    \"django.contrib.auth.backends.ModelBackend\",\n]\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework.authentication.SessionAuthentication\",\n    ),",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework.authentication.SessionAuthentication\",\n    ),\n    \"DEFAULT_FILTER_BACKENDS\": (\n        \"django_filters.rest_framework.DjangoFilterBackend\",\n        \"rest_framework.filters.SearchFilter\",\n    ),\n    \"DEFAULT_THROTTLE_CLASSES\": [\n        \"rest_framework.throttling.AnonRateThrottle\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "INSTALLED_APPS = DJANGO_APPS + CUSTOM_APPS + THIRD_PARTY_APPS\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    # AxesMiddleware should be the last middleware in the MIDDLEWARE list.",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "ROOT_URLCONF = \"config.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "WSGI_APPLICATION = \"config.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n# DATABASES = {\n#     \"default\": {\n#         \"ENGINE\": env.str(\"DB_ENGINE\"),\n#         \"NAME\": env.str(\"DB_NAME\"),\n#         \"USER\": env.str(\"DB_USER\"),\n#         \"PASSWORD\": env.get_value(\"DB_PASSWORD\"),\n#         \"HOST\": env.str(\"DB_HOST\"),",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"Asia/Tashkent\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = (BASE_DIR / \"static\",)\nMEDIA_URL = \"media/\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "TIME_ZONE = \"Asia/Tashkent\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = (BASE_DIR / \"static\",)\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = (BASE_DIR / \"static\",)\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = (BASE_DIR / \"static\",)\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "STATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = (BASE_DIR / \"static\",)\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# CACHES\n# CACHES = {",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = (BASE_DIR / \"static\",)\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# CACHES\n# CACHES = {\n#     \"default\": {",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "STATICFILES_DIRS = (BASE_DIR / \"static\",)\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# CACHES\n# CACHES = {\n#     \"default\": {\n#         \"BACKEND\": \"django.config.cache.backends.redis.RedisCache\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "MEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# CACHES\n# CACHES = {\n#     \"default\": {\n#         \"BACKEND\": \"django.config.cache.backends.redis.RedisCache\",\n#         \"LOCATION\": f\"{env.str('REDIS_URL', 'redis://localhost:6379/0')}\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# CACHES\n# CACHES = {\n#     \"default\": {\n#         \"BACKEND\": \"django.config.cache.backends.redis.RedisCache\",\n#         \"LOCATION\": f\"{env.str('REDIS_URL', 'redis://localhost:6379/0')}\",\n#         \"KEY_PREFIX\": \"boilerplate\",",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# CACHES\n# CACHES = {\n#     \"default\": {\n#         \"BACKEND\": \"django.config.cache.backends.redis.RedisCache\",\n#         \"LOCATION\": f\"{env.str('REDIS_URL', 'redis://localhost:6379/0')}\",\n#         \"KEY_PREFIX\": \"boilerplate\",\n#     }\n# }\n# CELERY CONFIGURATION",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "CELERY_BROKER_URL",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "CELERY_BROKER_URL = env.str(\"CELERY_BROKER_URL\", \"redis://localhost:6379\")\nCELERY_RESULT_BACKEND = env.str(\"CELERY_BROKER_URL\", \"redis://localhost:6379\")\nCELERY_TIMEZONE = \"Asia/Tashkent\"\nCELERY_TASK_TRACK_STARTED = True\nCELERY_TASK_TIME_LIMIT = 30 * 60\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nAXES_FAILURE_LIMIT = 3  # Limit login attempts to 5\nAXES_COOLOFF_TIME = 0  # Lock out the user for 1 minute after reaching the limit\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "CELERY_RESULT_BACKEND",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "CELERY_RESULT_BACKEND = env.str(\"CELERY_BROKER_URL\", \"redis://localhost:6379\")\nCELERY_TIMEZONE = \"Asia/Tashkent\"\nCELERY_TASK_TRACK_STARTED = True\nCELERY_TASK_TIME_LIMIT = 30 * 60\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nAXES_FAILURE_LIMIT = 3  # Limit login attempts to 5\nAXES_COOLOFF_TIME = 0  # Lock out the user for 1 minute after reaching the limit\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "CELERY_TIMEZONE",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "CELERY_TIMEZONE = \"Asia/Tashkent\"\nCELERY_TASK_TRACK_STARTED = True\nCELERY_TASK_TIME_LIMIT = 30 * 60\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nAXES_FAILURE_LIMIT = 3  # Limit login attempts to 5\nAXES_COOLOFF_TIME = 0  # Lock out the user for 1 minute after reaching the limit\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "CELERY_TASK_TRACK_STARTED",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "CELERY_TASK_TRACK_STARTED = True\nCELERY_TASK_TIME_LIMIT = 30 * 60\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nAXES_FAILURE_LIMIT = 3  # Limit login attempts to 5\nAXES_COOLOFF_TIME = 0  # Lock out the user for 1 minute after reaching the limit\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "CELERY_TASK_TIME_LIMIT",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "CELERY_TASK_TIME_LIMIT = 30 * 60\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nAXES_FAILURE_LIMIT = 3  # Limit login attempts to 5\nAXES_COOLOFF_TIME = 0  # Lock out the user for 1 minute after reaching the limit\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "AXES_FAILURE_LIMIT",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "AXES_FAILURE_LIMIT = 3  # Limit login attempts to 5\nAXES_COOLOFF_TIME = 0  # Lock out the user for 1 minute after reaching the limit\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "AXES_COOLOFF_TIME",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "AXES_COOLOFF_TIME = 0  # Lock out the user for 1 minute after reaching the limit\nAUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "config.settings.base",
        "description": "config.settings.base",
        "peekOfCode": "AUTH_USER_MODEL = \"users.User\"",
        "detail": "config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "config.settings.devolop",
        "description": "config.settings.devolop",
        "peekOfCode": "DEBUG = True\nCELERY_TASK_ALWAYS_EAGER = True",
        "detail": "config.settings.devolop",
        "documentation": {}
    },
    {
        "label": "CELERY_TASK_ALWAYS_EAGER",
        "kind": 5,
        "importPath": "config.settings.devolop",
        "description": "config.settings.devolop",
        "peekOfCode": "CELERY_TASK_ALWAYS_EAGER = True",
        "detail": "config.settings.devolop",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.asgi",
        "description": "config.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "config.asgi",
        "documentation": {}
    },
    {
        "label": "BothHttpAndHttpsSchemaGenerator",
        "kind": 6,
        "importPath": "config.generator",
        "description": "config.generator",
        "peekOfCode": "class BothHttpAndHttpsSchemaGenerator(OpenAPISchemaGenerator):\n    def get_schema(self, request=None, public=False):\n        schema = super().get_schema(request, public)\n        schema.schemes = [\"http\", \"https\"]\n        return schema",
        "detail": "config.generator",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "config.jazzmin_conf",
        "description": "config.jazzmin_conf",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"Site Admin\",\n    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_header\": \"Site\",\n    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_brand\": \"Site\",\n    # Logo to use for your site, must be present in static files, used for brand on top left\n    # \"site_logo\": \"instagram.png\",\n    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)",
        "detail": "config.jazzmin_conf",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "config.schema",
        "description": "config.schema",
        "peekOfCode": "schema_view = get_schema_view(\n    openapi.Info(\n        title=\"Site API\",\n        default_version=\"v1\",\n        description=\"Api\",\n        terms_of_service=\"https://www.google.com/policies/terms/\",\n        contact=openapi.Contact(email=\"mashrapovdev@gmail.com\"),\n        license=openapi.License(name=\"BSD License\"),\n    ),\n    public=True,",
        "detail": "config.schema",
        "documentation": {}
    },
    {
        "label": "swagger_urlpatterns",
        "kind": 5,
        "importPath": "config.schema",
        "description": "config.schema",
        "peekOfCode": "swagger_urlpatterns = [\n    # re_path(\n    #     r\"^swagger(?P<format>\\.json|\\.yaml)$\",\n    #     schema_view.without_ui(cache_timeout=0),\n    #     name=\"schema-json\",\n    # ),\n    path(\n        \"swagger/\",\n        schema_view.with_ui(\"swagger\", cache_timeout=0),\n        name=\"schema-swagger-ui\",",
        "detail": "config.schema",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/v1/shop/\", include(\"shop.urls\")),\n    path(\"api/v1/doctor/\", include(\"doctor.urls\")),\n    path(\"api/v1/intro/\", include(\"common.urls\")),\n    path(\"api/v1/user/\", include(\"users.urls\")),\n    path(\"api/v1/order/\", include(\"order.urls\")),\n]\nurlpatterns += swagger_urlpatterns\nif settings.DEBUG:",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.wsgi",
        "description": "config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "config.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0001_initial",
        "description": "doctor.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Doctor',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "doctor.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0002_alter_booking_end_time_alter_booking_start_time",
        "description": "doctor.migrations.0002_alter_booking_end_time_alter_booking_start_time",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='booking',\n            name='end_time',\n            field=models.DateField(),\n        ),",
        "detail": "doctor.migrations.0002_alter_booking_end_time_alter_booking_start_time",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0003_alter_booking_end_time_alter_booking_start_time",
        "description": "doctor.migrations.0003_alter_booking_end_time_alter_booking_start_time",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0002_alter_booking_end_time_alter_booking_start_time'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='booking',\n            name='end_time',\n            field=models.DateTimeField(),\n        ),",
        "detail": "doctor.migrations.0003_alter_booking_end_time_alter_booking_start_time",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0004_alter_booking_end_time_alter_booking_start_time",
        "description": "doctor.migrations.0004_alter_booking_end_time_alter_booking_start_time",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0003_alter_booking_end_time_alter_booking_start_time'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='booking',\n            name='end_time',\n            field=models.DateTimeField(verbose_name='%H:%M:%S'),\n        ),",
        "detail": "doctor.migrations.0004_alter_booking_end_time_alter_booking_start_time",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0005_alter_booking_end_time_alter_booking_start_time",
        "description": "doctor.migrations.0005_alter_booking_end_time_alter_booking_start_time",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0004_alter_booking_end_time_alter_booking_start_time'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='booking',\n            name='end_time',\n            field=models.DateTimeField(),\n        ),",
        "detail": "doctor.migrations.0005_alter_booking_end_time_alter_booking_start_time",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0006_alter_booking_user",
        "description": "doctor.migrations.0006_alter_booking_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0005_alter_booking_end_time_alter_booking_start_time'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='booking',\n            name='user',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "doctor.migrations.0006_alter_booking_user",
        "documentation": {}
    },
    {
        "label": "DoctorConfig",
        "kind": 6,
        "importPath": "doctor.apps",
        "description": "doctor.apps",
        "peekOfCode": "class DoctorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'doctor'",
        "detail": "doctor.apps",
        "documentation": {}
    },
    {
        "label": "Syptoms",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Syptoms(BaseModel):\n    title = models.CharField(max_length=128)\n    def __str__(self):\n        return self.title\nclass Doctor(BaseModel):\n    name = models.CharField(max_length=128)\n    specialization = models.CharField(max_length=128)\n    city = models.CharField(max_length=128)\n    rating = models.IntegerField()\n    patients = models.IntegerField()",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Doctor(BaseModel):\n    name = models.CharField(max_length=128)\n    specialization = models.CharField(max_length=128)\n    city = models.CharField(max_length=128)\n    rating = models.IntegerField()\n    patients = models.IntegerField()\n    syptoms = models.ManyToManyField(Syptoms)\n    def __str__(self):\n        return self.name\nclass Booking(BaseModel):",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Booking",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Booking(BaseModel):\n    user = models.ForeignKey(\n        settings.AUTH_USER_MODEL, on_delete=models.CASCADE, blank=True, null=True\n    )\n    doctor = models.ForeignKey(\n        Doctor, on_delete=models.CASCADE, related_name=\"appointments\"\n    )\n    start_time = models.DateTimeField()\n    end_time = models.DateTimeField()\n    def __str__(self):",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorSerializer",
        "kind": 6,
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "peekOfCode": "class DoctorSerializer(serializers.ModelSerializer):\n    syptoms = serializers.StringRelatedField(many=True)\n    class Meta:\n        model = Doctor\n        fields = (\n            \"name\",\n            \"specialization\",\n            \"city\",\n            \"rating\",\n            \"patients\",",
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "BookingSerializer",
        "kind": 6,
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "peekOfCode": "class BookingSerializer(serializers.ModelSerializer):\n    # user = serializers.StringRelatedField(source=\"user.username\")\n    # doctor = serializers.StringRelatedField(source=\"doctor.name\")\n    class Meta:\n        model = Booking\n        fields = (\n            \"user\",\n            \"doctor\",\n            \"start_time\",\n            \"end_time\",",
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "doctor.urls",
        "description": "doctor.urls",
        "peekOfCode": "urlpatterns = [\n    # path(\"\", views.DoctorListAPIView.as_view()),\n    path(\"booking/\", views.BookingListAPIView.as_view()),\n]",
        "detail": "doctor.urls",
        "documentation": {}
    },
    {
        "label": "DoctorListAPIView",
        "kind": 6,
        "importPath": "doctor.views",
        "description": "doctor.views",
        "peekOfCode": "class DoctorListAPIView(generics.ListAPIView):\n    queryset = Doctor.objects.all()\n    serializer_class = DoctorSerializer\n    filter_backends = (filters.SearchFilter,)\n    search_fields = (\n        \"name\",\n        \"syptoms__title\",\n    )\nclass BookingListAPIView(generics.ListAPIView):\n    queryset = Booking.objects.all()",
        "detail": "doctor.views",
        "documentation": {}
    },
    {
        "label": "BookingListAPIView",
        "kind": 6,
        "importPath": "doctor.views",
        "description": "doctor.views",
        "peekOfCode": "class BookingListAPIView(generics.ListAPIView):\n    queryset = Booking.objects.all()\n    serializer_class = BookingSerializer\n    def get_object(self):\n        return super().get_object(user=self.request.user)",
        "detail": "doctor.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0001_initial",
        "description": "order.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('shop', '0004_delete_cart'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[",
        "detail": "order.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0002_alter_cart_unique_together",
        "description": "order.migrations.0002_alter_cart_unique_together",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('order', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterUniqueTogether(\n            name='cart',\n            unique_together=set(),\n        ),\n    ]",
        "detail": "order.migrations.0002_alter_cart_unique_together",
        "documentation": {}
    },
    {
        "label": "OrderConfig",
        "kind": 6,
        "importPath": "order.apps",
        "description": "order.apps",
        "peekOfCode": "class OrderConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'order'",
        "detail": "order.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class Cart(BaseModel):\n    user = models.ForeignKey(\n        settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name=\"cart\"\n    )\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    count = models.IntegerField(default=0)\n    # class Meta:\n    #     unique_together = (\"user\", \"product\")\n    @property\n    def get_total_price(self):",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class ShippingAddress(BaseModel):\n    user = models.ForeignKey(\n        settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True\n    )\n    cart = models.ForeignKey(Cart, on_delete=models.SET_NULL, null=True)\n    address = models.CharField(max_length=200, null=False)\n    landmark = models.CharField(max_length=256)\n    city = models.CharField(max_length=200, null=False)\n    pincode = models.CharField(max_length=200, null=False)\n    shipping_fee = models.IntegerField()",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "IsOwnerOrReadOnly",
        "kind": 6,
        "importPath": "order.permissions",
        "description": "order.permissions",
        "peekOfCode": "class IsOwnerOrReadOnly(permissions.BasePermission):\n    def has_object_permission(self, request, view, obj):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        return obj.user.id == request.user.id",
        "detail": "order.permissions",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = (\"user\", \"product\", \"count\")\nclass ShippingAddressSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ShippingAddress\n        fields = (\n            \"full_name\",\n            \"address\",",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "ShippingAddressSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class ShippingAddressSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ShippingAddress\n        fields = (\n            \"full_name\",\n            \"address\",\n            \"landmark\",\n            \"city\",\n            \"pincode\",\n            \"contact_number\",",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "order.urls",
        "description": "order.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"cart/\", views.CartListCreateAPIView.as_view()),\n    path(\"cart/<int:pk>/\", views.CartRetrieveUpdateDestroyAPIView.as_view()),\n]",
        "detail": "order.urls",
        "documentation": {}
    },
    {
        "label": "CartListCreateAPIView",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class CartListCreateAPIView(generics.ListCreateAPIView):\n    # queryset = Cart.objects.all()\n    serializer_class = CartSerializer\n    # permission_classes = (IsOwnerOrReadOnly, permissions.IsAuthenticated)\n    def get_queryset(self):\n        user = self.request.user\n        return Cart.objects.filter(user=user)\nclass CartRetrieveUpdateDestroyAPIView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Cart.objects.all()\n    serializer_class = CartSerializer",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "CartRetrieveUpdateDestroyAPIView",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class CartRetrieveUpdateDestroyAPIView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Cart.objects.all()\n    serializer_class = CartSerializer\n    permission_classes = (IsOwnerOrReadOnly,)\nclass ShippingAddressListCreateAPIView(generics.ListCreateAPIView):\n    queryset = ShippingAddress.objects.all()\n    serializer_class = ShippingAddressSerializer\n    permission_classes = (IsOwnerOrReadOnly, permissions.IsAuthenticated)\nclass ShippingAddressRetrieveUpdateDestroyAPIView(\n    generics.RetrieveUpdateDestroyAPIView",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "ShippingAddressListCreateAPIView",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class ShippingAddressListCreateAPIView(generics.ListCreateAPIView):\n    queryset = ShippingAddress.objects.all()\n    serializer_class = ShippingAddressSerializer\n    permission_classes = (IsOwnerOrReadOnly, permissions.IsAuthenticated)\nclass ShippingAddressRetrieveUpdateDestroyAPIView(\n    generics.RetrieveUpdateDestroyAPIView\n):\n    queryset = ShippingAddress.objects.all()\n    serializer_class = ShippingAddressSerializer\n    permission_classes = (IsOwnerOrReadOnly,)",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "ShippingAddressRetrieveUpdateDestroyAPIView",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class ShippingAddressRetrieveUpdateDestroyAPIView(\n    generics.RetrieveUpdateDestroyAPIView\n):\n    queryset = ShippingAddress.objects.all()\n    serializer_class = ShippingAddressSerializer\n    permission_classes = (IsOwnerOrReadOnly,)",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "shop.migrations.0001_initial",
        "description": "shop.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tag',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "shop.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "shop.migrations.0002_product_content",
        "description": "shop.migrations.0002_product_content",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('shop', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='content',\n            field=models.TextField(default=1),\n            preserve_default=False,",
        "detail": "shop.migrations.0002_product_content",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "shop.migrations.0003_cart",
        "description": "shop.migrations.0003_cart",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('shop', '0002_product_content'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "shop.migrations.0003_cart",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "shop.migrations.0004_delete_cart",
        "description": "shop.migrations.0004_delete_cart",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('shop', '0003_cart'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Cart',\n        ),\n    ]",
        "detail": "shop.migrations.0004_delete_cart",
        "documentation": {}
    },
    {
        "label": "ShopConfig",
        "kind": 6,
        "importPath": "shop.apps",
        "description": "shop.apps",
        "peekOfCode": "class ShopConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'shop'",
        "detail": "shop.apps",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "class Tag(BaseModel):\n    title = models.CharField(max_length=128)\n    def __str__(self) -> str:\n        return self.title\nclass Product(BaseModel):\n    title = models.CharField(max_length=256)\n    image = models.ImageField(upload_to=\"shop/\")\n    content = models.TextField()\n    short_content = models.TextField()\n    price = models.IntegerField()",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "class Product(BaseModel):\n    title = models.CharField(max_length=256)\n    image = models.ImageField(upload_to=\"shop/\")\n    content = models.TextField()\n    short_content = models.TextField()\n    price = models.IntegerField()\n    tag = models.ManyToManyField(Tag)\n    rating = models.IntegerField()\n    def __str__(self):\n        return self.title",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "User = get_user_model()\nclass Tag(BaseModel):\n    title = models.CharField(max_length=128)\n    def __str__(self) -> str:\n        return self.title\nclass Product(BaseModel):\n    title = models.CharField(max_length=256)\n    image = models.ImageField(upload_to=\"shop/\")\n    content = models.TextField()\n    short_content = models.TextField()",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "ProductListSerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class ProductListSerializer(serializers.ModelSerializer):\n    tag = serializers.StringRelatedField(many=True)\n    class Meta:\n        model = Product\n        fields = (\"short_content\", \"image\", \"tag\", \"price\")\nclass ProductDetailSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = (\"image\", \"title\", \"price\", \"rating\", \"content\")",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "ProductDetailSerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class ProductDetailSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = (\"image\", \"title\", \"price\", \"rating\", \"content\")",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "shop.urls",
        "description": "shop.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.ProductListAPIView.as_view()),\n    path(\"detail/<int:pk>/\", views.ProductRetrieveAPIView.as_view()),\n]",
        "detail": "shop.urls",
        "documentation": {}
    },
    {
        "label": "ProductListAPIView",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class ProductListAPIView(generics.ListAPIView):\n    queryset = Product.objects.all()\n    serializer_class = ProductListSerializer\n    filter_backends = (DjangoFilterBackend, filters.SearchFilter)\n    filterset_fields = (\"tag\", \"rating\")\n    search_fields = (\"title\",)\nclass ProductRetrieveAPIView(generics.RetrieveAPIView):\n    queryset = Product.objects.all()\n    serializer_class = ProductDetailSerializer",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "ProductRetrieveAPIView",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class ProductRetrieveAPIView(generics.RetrieveAPIView):\n    queryset = Product.objects.all()\n    serializer_class = ProductDetailSerializer",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0002_user_age_user_dob_user_height_user_weight",
        "description": "users.migrations.0002_user_age_user_dob_user_height_user_weight",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('users', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='age',\n            field=models.IntegerField(blank=True, null=True),\n        ),",
        "detail": "users.migrations.0002_user_age_user_dob_user_height_user_weight",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class User(AbstractUser):\n    username = models.CharField(\n        max_length=128,\n        blank=True,\n        null=True,\n        unique=True,\n    )\n    email = models.EmailField(unique=True)\n    phone_number = models.CharField(max_length=10)\n    height = models.IntegerField(null=True, blank=True)",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "users.serializers",
        "description": "users.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = (\n            \"username\",\n            \"email\",\n            \"phone_number\",\n            \"height\",\n            \"weight\",\n            \"dob\",",
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "users.urls",
        "description": "users.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"me/\", views.UserMeAPIView.as_view()),\n]",
        "detail": "users.urls",
        "documentation": {}
    },
    {
        "label": "UserMeAPIView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class UserMeAPIView(generics.RetrieveUpdateAPIView):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n    def get_object(self):\n        return self.request.user",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings.base\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]